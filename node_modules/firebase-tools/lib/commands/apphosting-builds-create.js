"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.command = void 0;
const apphosting = require("../gcp/apphosting");
const logger_1 = require("../logger");
const command_1 = require("../command");
const utils_1 = require("../utils");
const projectUtils_1 = require("../projectUtils");
exports.command = new command_1.Command("apphosting:builds:create <backendId>")
    .description("Create a build for an App Hosting backend")
    .option("-l, --location <location>", "Specify the region of the backend", "us-central1")
    .option("-i, --id <buildId>", "Id of the build. If not present, autogenerate a random id", "")
    .option("-b, --branch <branch>", "Repository branch to deploy. Defaults to 'main'", "main")
    .before(apphosting.ensureApiEnabled)
    .action(async (backendId, options) => {
    const projectId = (0, projectUtils_1.needProjectId)(options);
    const location = options.location;
    const buildId = options.buildId || (0, utils_1.generateId)();
    const branch = options.branch;
    const op = await apphosting.createBuild(projectId, location, backendId, buildId, {
        source: {
            codebase: {
                branch: "main",
            },
        },
    });
    logger_1.logger.info(`Started a build for backend ${backendId} on branch ${branch}.`);
    logger_1.logger.info("Check status by running:");
    logger_1.logger.info(`\tfirebase apphosting:builds:get ${backendId} ${buildId} --location ${location}`);
    return op;
});
